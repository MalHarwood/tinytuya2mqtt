---
name: tag-release
on:
  push:
    branches:
      - 'gh-actions'

jobs:
  tag-release:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.version }}
      needs_release: ${{ steps.tags.outputs.needs_release }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Fetch all history & tags
          fetch-depth: 0
          # Checkout with PAT so that git push triggers further Actions
          token: ${{ secrets.PAT }}

      - name: Extract version
        id: version
        run: |
          python -m pip install --no-deps .
          echo "::set-output name=version::$(python -c 'import tinytuya2mqtt; print(tinytuya2mqtt.__version__)')"

      - name: Check tags
        id: tags
        run: |
          echo "::set-output name=needs_release::$(git describe --match v$VERSION &>/dev/null; echo $?)"
        env:
          VERSION: ${{ steps.version.outputs.version }}

      - name: Log variables
        run: |
          echo version=${{ steps.version.outputs.version }}
          echo needs_release=${{ steps.tags.outputs.needs_release }}

      - name: Create tag
        # Git describe exits with 128 when a tag is not found
        if: steps.tags.outputs.needs_release > 0
        run: |
          git config user.email "github@mafro.net"
          git config user.name "GHA Bot"
          git tag -a -m v$VERSION v$VERSION
          git push --tags
        env:
          VERSION: ${{ steps.version.outputs.version }}


  gh-release:
    runs-on: ubuntu-latest
    needs: [tag-release]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        if: needs.tag-release.outputs.needs_release > 0

      - name: Build Wheel
        if: needs.tag-release.outputs.needs_release > 0
        run: python -m pip wheel --no-deps --wheel-dir dist .

      - name: Release
        uses: softprops/action-gh-release@v1
        if: needs.tag-release.outputs.needs_release > 0
        with:
          tag_name: ${{ needs.tag-release.outputs.version }}
          token: ${{ secrets.PAT }}
          files: |
            dist/*.whl
